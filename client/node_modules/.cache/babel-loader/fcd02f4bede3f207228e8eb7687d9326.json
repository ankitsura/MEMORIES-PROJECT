{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\n\n// initial state of allPosts\nconst allPosts = [];\n\n// action.payload is used to receive paramiters or value from the user \nexport const posts = createReducer(allPosts, {\n  FETCH_ALL: (state, action) => {\n    return action.payload;\n  },\n  CREATE: (state, action) => {\n    return [...allPosts, action.payload];\n  },\n  UPDATE: (state, action) => {\n    return allPosts.filter(post => post.id !== action.payload);\n  },\n  DELETE: (state, action) => {\n    console.log(state.posts, state, allP);\n    return allPosts.map(post => post._id === action.payload._id ? action.payload : allPosts);\n  },\n  LIKE_POST: (state, action) => {\n    return allPosts.map(post => post._id === action.payload._id ? action.payload : allPosts);\n  }\n});","map":{"version":3,"names":["createReducer","allPosts","posts","FETCH_ALL","state","action","payload","CREATE","UPDATE","filter","post","id","DELETE","console","log","allP","map","_id","LIKE_POST"],"sources":["C:/Users/suraa/Documents/Ninja Notes/Node JS Workspace/MEMORIES-PROJECT/client/src/reducers/posts.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n// initial state of allPosts\r\nconst allPosts = [];\r\n\r\n// action.payload is used to receive paramiters or value from the user \r\nexport const posts = createReducer(allPosts,{\r\n    FETCH_ALL: (state, action) =>{\r\n        return action.payload;\r\n    },\r\n    CREATE: (state, action) =>{\r\n        return [...allPosts, action.payload];\r\n    },\r\n    UPDATE: (state, action) =>{\r\n        return allPosts.filter((post) => post.id !== action.payload);\r\n    },\r\n    DELETE: (state, action) =>{\r\n        console.log(state.posts, state, allP);\r\n        return allPosts.map((post) => post._id === action.payload._id ? action.payload : allPosts);\r\n    },\r\n    LIKE_POST: (state, action) =>{\r\n        return allPosts.map((post) => post._id === action.payload._id ? action.payload : allPosts);\r\n    },\r\n})\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;;AAEhD;AACA,MAAMC,QAAQ,GAAG,EAAE;;AAEnB;AACA,OAAO,MAAMC,KAAK,GAAGF,aAAa,CAACC,QAAQ,EAAC;EACxCE,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAI;IACzB,OAAOA,MAAM,CAACC,OAAO;EACzB,CAAC;EACDC,MAAM,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAI;IACtB,OAAO,CAAC,GAAGJ,QAAQ,EAAEI,MAAM,CAACC,OAAO,CAAC;EACxC,CAAC;EACDE,MAAM,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAI;IACtB,OAAOJ,QAAQ,CAACQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAAC;EAChE,CAAC;EACDM,MAAM,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAI;IACtBQ,OAAO,CAACC,GAAG,CAACV,KAAK,CAACF,KAAK,EAAEE,KAAK,EAAEW,IAAI,CAAC;IACrC,OAAOd,QAAQ,CAACe,GAAG,CAAEN,IAAI,IAAKA,IAAI,CAACO,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACW,GAAG,GAAGZ,MAAM,CAACC,OAAO,GAAGL,QAAQ,CAAC;EAC9F,CAAC;EACDiB,SAAS,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAI;IACzB,OAAOJ,QAAQ,CAACe,GAAG,CAAEN,IAAI,IAAKA,IAAI,CAACO,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAACW,GAAG,GAAGZ,MAAM,CAACC,OAAO,GAAGL,QAAQ,CAAC;EAC9F;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}