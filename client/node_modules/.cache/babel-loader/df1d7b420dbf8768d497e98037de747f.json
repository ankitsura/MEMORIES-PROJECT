{"ast":null,"code":"import * as api from '../api';\n\n// Action Creators\n\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data,\n      currentPage,\n      numberOfPages\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n    dispatch({\n      type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.getPostsBySearch(searchQuery);\n    dispatch({\n      type: 'FETCH_BY_SEARCH',\n      payload: data\n    });\n    dispatch({\n      type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n    dispatch({\n      type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    await dispatch({\n      type: 'LIKE_POST',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["api","getPost","id","dispatch","type","START_LOADING","data","currentPage","numberOfPages","fetchPost","FETCH_POST","payload","post","error","console","log","getPosts","page","fetchPosts","message","getPostsBySearch","searchQuery","createPost","updatePost","deletePost","likePost"],"sources":["C:/Users/suraa/Documents/Ninja Notes/Node JS Workspace/MEMORIES-PROJECT/client/src/actions/postsActions.js"],"sourcesContent":["import * as api from '../api';\r\n\r\n// Action Creators\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: START_LOADING });\r\n  \r\n      const { data, currentPage, numberOfPages } = await api.fetchPost(id);\r\n  \r\n      dispatch({ type: FETCH_POST, payload: { post: data } });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'START_LOADING'});\r\n        const { data } = await api.fetchPosts(page);\r\n        dispatch ({\r\n            type: 'FETCH_ALL',\r\n            payload: data\r\n        });\r\n        dispatch({type: 'END_LOADING'});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'START_LOADING'});\r\n        const { data } = await api.getPostsBySearch(searchQuery);\r\n        dispatch ({\r\n            type: 'FETCH_BY_SEARCH',\r\n            payload: data\r\n        });\r\n        dispatch({type: 'END_LOADING'});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'START_LOADING'});\r\n        const {data} = await api.createPost(post);\r\n        dispatch ({\r\n            type: 'CREATE',\r\n            payload: data\r\n        });\r\n        dispatch({type: 'END_LOADING'});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        dispatch ({\r\n            type: 'UPDATE',\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch ({\r\n            type: 'DELETE',\r\n            payload: id\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const  { data } = await api.likePost(id);\r\n        await dispatch ({\r\n            type: 'LIKE_POST',\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}