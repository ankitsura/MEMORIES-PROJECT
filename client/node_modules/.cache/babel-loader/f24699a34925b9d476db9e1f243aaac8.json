{"ast":null,"code":"import * as api from '../api';\n\n// Action Creators\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: 'START_LOADING'\n    });\n    const {\n      posts: data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n    dispatch({\n      type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: 'FETCH_POST',\n      payload: data\n    });\n    dispatch({\n      type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.getPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: 'FETCH_BY_SEARCH',\n      payload: data\n    });\n    dispatch({\n      type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n    dispatch({\n      type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    await dispatch({\n      type: 'LIKE_POST',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["api","getPosts","page","dispatch","type","posts","data","fetchPosts","payload","error","console","log","message","getPost","id","fetchPost","getPostsBySearch","searchQuery","createPost","post","updatePost","deletePost","likePost"],"sources":["C:/Users/suraa/Documents/Ninja Notes/Node JS Workspace/MEMORIES-PROJECT/client/src/actions/postsActions.js"],"sourcesContent":["import * as api from '../api';\r\n\r\n// Action Creators\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'START_LOADING'});\r\n        const { posts: data } = await api.fetchPosts(page);\r\n        dispatch ({\r\n            type: 'FETCH_ALL',\r\n            payload: data\r\n        });\r\n        dispatch({type: 'END_LOADING'});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'START_LOADING'});\r\n        const { data } = await api.fetchPost(id);\r\n        dispatch ({\r\n            type: 'FETCH_POST',\r\n            payload: data\r\n        });\r\n        dispatch({type: 'END_LOADING'});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'START_LOADING'});\r\n        const {data} = await api.getPostsBySearch(searchQuery);\r\n        console.log(data);\r\n        dispatch ({\r\n            type: 'FETCH_BY_SEARCH',\r\n            payload: data \r\n        });\r\n        dispatch({type: 'END_LOADING'});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: 'START_LOADING'});\r\n        const {data} = await api.createPost(post);\r\n        dispatch ({\r\n            type: 'CREATE',\r\n            payload: data\r\n        });\r\n        dispatch({type: 'END_LOADING'});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        dispatch ({\r\n            type: 'UPDATE',\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch ({\r\n            type: 'DELETE',\r\n            payload: id\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const  { data } = await api.likePost(id);\r\n        await dispatch ({\r\n            type: 'LIKE_POST',\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}