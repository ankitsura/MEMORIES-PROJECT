{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suraa\\\\Documents\\\\Ninja Notes\\\\Node JS Workspace\\\\MEMORIES-PROJECT\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport dotenv from 'dotenv';\nimport jwtDecode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Container, Grid, Paper, Typography } from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport Input from './Input';\nimport useStyles from './styles';\nimport Icon from './Icon';\n// import Icon from './Icon';\n\nconst Auth = () => {\n  dotenv.config();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const handleSubmit = () => {};\n  const handleChange = e => {};\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const switchMode = () => {\n    setIsSignup(!isSignup);\n    setShowPassword(false);\n  };\n  const googleSuccess = res => {\n    try {\n      console.log(res);\n      const token = res === null || res === void 0 ? void 0 : res.credential;\n      const userObject = jwtDecode(res === null || res === void 0 ? void 0 : res.credential);\n      dispatch({\n        type: 'AUTH',\n        data: {\n          userObject\n        }\n      });\n      localStorage.setItem('profile', JSON.stringify(userObject));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n  const googleFailure = () => {\n    console.log('Google Sign In failure. Try again later');\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 157\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }),\n    text: \"Google Sign In\",\n    disabled: true,\n    onSuccess: googleSuccess,\n    onError: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"))))));\n};\nexport default Auth;","map":{"version":3,"names":["React","useState","GoogleLogin","dotenv","jwtDecode","useDispatch","Avatar","Button","Container","Grid","Paper","Typography","LockOutlined","Input","useStyles","Icon","Auth","config","classes","showPassword","setShowPassword","isSignup","setIsSignup","dispatch","handleSubmit","handleChange","e","handleShowPassword","switchMode","googleSuccess","res","console","log","token","credential","userObject","type","data","localStorage","setItem","JSON","stringify","error","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"sources":["C:/Users/suraa/Documents/Ninja Notes/Node JS Workspace/MEMORIES-PROJECT/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport dotenv from 'dotenv'\r\nimport jwtDecode from 'jwt-decode'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nimport { Avatar, Button, Container, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { LockOutlined } from '@material-ui/icons';\r\n\r\nimport Input from './Input';\r\nimport useStyles  from './styles';\r\nimport Icon from './Icon';\r\n// import Icon from './Icon';\r\n\r\nconst Auth = () => {\r\n    dotenv.config();\r\n    const classes = useStyles();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const dispatch =  useDispatch();\r\n\r\n    const handleSubmit = () => {\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        \r\n    }\r\n    const handleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    }\r\n    const switchMode = () => {\r\n        setIsSignup(!isSignup);\r\n        setShowPassword(false);\r\n    }\r\n    const googleSuccess = (res) =>{\r\n        try {\r\n            console.log(res);\r\n            const token = res?.credential;\r\n            const userObject = jwtDecode(res?.credential);\r\n            dispatch({type: 'AUTH', data: {userObject, }});\r\n            localStorage.setItem('profile', JSON.stringify(userObject));\r\n        } catch (error) {\r\n            console.log('error',error);\r\n        }\r\n    }\r\n    const googleFailure = () =>{\r\n        console.log('Google Sign In failure. Try again later');\r\n    }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n       <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n            <LockOutlined />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                {\r\n                    isSignup && (\r\n                        <>\r\n                            <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half />\r\n                            <Input name='lastName' label='Last Name' handleChange={handleChange} half />\r\n                        </>\r\n                    )\r\n                }\r\n                <Input name='email' label='Email Address' handleChange={handleChange} type='email' autoFocus />\r\n                <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n                {\r\n                    isSignup && <Input name='confirmPassword' label='Confirm Password' handleChange={handleChange} type='password' />\r\n                }\r\n            </Grid>\r\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n                {isSignup ? 'Sign Up' : 'Sign In'}\r\n            </Button>\r\n            {/* <GoogleOAuthProvider clientId=\"911641069648-6ed8spt8jg317l0tht184feke10lirle.apps.googleusercontent.com\">\r\n                <GoogleLogin\r\n                    className={classes.googleButton}\r\n                    color='primary'\r\n                    // disabled={renderProps.disabled}\r\n                    variant='contained'\r\n                    onSuccess={googleSuccess}\r\n                    onError={googleFailure}\r\n                />\r\n            </GoogleOAuthProvider> */}\r\n            <GoogleLogin\r\n                render={(renderProps) => (\r\n                <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n                </Button>\r\n                )}\r\n                text='Google Sign In'\r\n                disabled\r\n                onSuccess={googleSuccess}\r\n                onError={googleFailure}\r\n                cookiePolicy=\"single_host_origin\"\r\n          />\r\n            <Grid container justifyContent='flex-end'>\r\n                <Grid item>\r\n                    <Button onClick={switchMode}>\r\n                        {isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n       </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}