{"ast":null,"code":"import * as api from '../api';\n\n// Action Creators\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      Type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n    dispatch({\n      Type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const fetchPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      Type: 'START_LOADING'\n    });\n    const {\n      data\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: 'FETCH_BY_SEARCH',\n      payload: data\n    });\n    dispatch({\n      Type: 'END_LOADING'\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      Type: 'START_LOADING'\n    });\n    dispatch({\n      Type: 'END_LOADING'\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    await dispatch({\n      type: 'LIKE_POST',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["api","getPosts","page","dispatch","Type","data","fetchPosts","type","payload","error","console","log","message","fetchPostsBySearch","searchQuery","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/suraa/Documents/Ninja Notes/Node JS Workspace/MEMORIES-PROJECT/client/src/actions/postsActions.js"],"sourcesContent":["import * as api from '../api';\r\n\r\n// Action Creators\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({Type: 'START_LOADING'});\r\n        const { data } = await api.fetchPosts(page);\r\n        dispatch ({\r\n            type: 'FETCH_ALL',\r\n            payload: data\r\n        });\r\n        dispatch({Type: 'END_LOADING'});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\nexport const fetchPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({Type: 'START_LOADING'});\r\n        const { data } = await api.fetchPostsBySearch(searchQuery);\r\n        dispatch ({\r\n            type: 'FETCH_BY_SEARCH',\r\n            payload: data\r\n        });\r\n        dispatch({Type: 'END_LOADING'});\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        dispatch({Type: 'START_LOADING'});\r\ndispatch({Type: 'END_LOADING'});\r\n        const {data} = await api.createPost(post);\r\n        dispatch ({\r\n            type: 'CREATE',\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        dispatch ({\r\n            type: 'UPDATE',\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch ({\r\n            type: 'DELETE',\r\n            payload: id\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const  { data } = await api.likePost(id);\r\n        await dispatch ({\r\n            type: 'LIKE_POST',\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}