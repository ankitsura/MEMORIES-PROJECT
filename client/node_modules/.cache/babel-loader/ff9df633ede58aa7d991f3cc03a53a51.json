{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n  return req;\n});\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const getPostsBySearch = searchQuery => {\n  API.get(`/posts/search?searchQuery=${searchQuery}`);\n};\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\n\n//auth API\nexport const signIn = formData => API.post(`/user/signin`, formData);\nexport const signUp = formData => API.post(`/user/signup`, formData);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","getPostsBySearch","searchQuery","createPost","newPost","post","updatePost","updatedPost","patch","deletePost","delete","likePost","signIn","formData","signUp"],"sources":["C:/Users/suraa/Documents/Ninja Notes/Node JS Workspace/MEMORIES-PROJECT/client/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({baseURL: \"http://localhost:5000\"});\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if(localStorage.getItem('profile')){\r\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    }\r\n    return req;\r\n})\r\n\r\n\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const getPostsBySearch = (searchQuery) => {\r\n    \r\n     API.get(`/posts/search?searchQuery=${searchQuery}`);\r\n}\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\n\r\n\r\n//auth API\r\nexport const signIn = (formData) => API.post(`/user/signin`, formData);\r\nexport const signUp = (formData) => API.post(`/user/signup`, formData);\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAACC,OAAO,EAAE;AAAuB,CAAC,CAAC;AAE5DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAClC,IAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAC;IAC/BF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAM,EAAC;EAC7F;EACA,OAAOP,GAAG;AACd,CAAC,CAAC;AAGF,OAAO,MAAMQ,SAAS,GAAIC,EAAE,IAAKf,GAAG,CAACgB,GAAG,CAAE,UAASD,EAAG,EAAC,CAAC;AACxD,OAAO,MAAME,UAAU,GAAIC,IAAI,IAAKlB,GAAG,CAACgB,GAAG,CAAE,eAAcE,IAAK,EAAC,CAAC;AAClE,OAAO,MAAMC,gBAAgB,GAAIC,WAAW,IAAK;EAE5CpB,GAAG,CAACgB,GAAG,CAAE,6BAA4BI,WAAY,EAAC,CAAC;AACxD,CAAC;AACD,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAKtB,GAAG,CAACuB,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC;AAClE,OAAO,MAAME,UAAU,GAAG,CAACT,EAAE,EAAEU,WAAW,KAAKzB,GAAG,CAAC0B,KAAK,CAAE,UAASX,EAAG,EAAC,EAAEU,WAAW,CAAC;AACrF,OAAO,MAAME,UAAU,GAAIZ,EAAE,IAAKf,GAAG,CAAC4B,MAAM,CAAE,UAASb,EAAG,EAAC,CAAC;AAC5D,OAAO,MAAMc,QAAQ,GAAId,EAAE,IAAKf,GAAG,CAAC0B,KAAK,CAAE,UAASX,EAAG,WAAU,CAAC;;AAGlE;AACA,OAAO,MAAMe,MAAM,GAAIC,QAAQ,IAAK/B,GAAG,CAACuB,IAAI,CAAE,cAAa,EAAEQ,QAAQ,CAAC;AACtE,OAAO,MAAMC,MAAM,GAAID,QAAQ,IAAK/B,GAAG,CAACuB,IAAI,CAAE,cAAa,EAAEQ,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}