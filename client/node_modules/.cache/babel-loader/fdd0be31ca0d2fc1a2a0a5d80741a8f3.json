{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nconst initialState = [];\nexport const posts = createReducer(initialState, builder => {\n  builder.addCase('FETCH_ALL', (state, action) => {\n    return action.payload;\n  }).addCase(CREATE, (state, action) => {\n    return [state, action.payload];\n  }).addCase(UPDATE, (state, action) => {\n    return state.filter(post => post._id !== action.payload);\n  }).addCase(DELETE, (state, action) => {\n    return state.map(post => post._id === action.payload._id ? action.payload : state);\n  }).addCase(LIKE_POST, (state, action) => {\n    return state.map(post => post._id === action.payload._id ? action.payload : state);\n  });\n});\n\n// action.payload is used to receive paramiters or value from the user \n// export const posts = createReducer([],{\n//     FETCH_ALL: (state, action) =>{\n//         return action.payload;\n//     },\n//     CREATE: (state, action) =>{\n//         return [state, action.payload];\n//     },\n//     UPDATE: (state, action) =>{\n//         return state.filter((post) => post._id !== action.payload);\n//     },\n//     DELETE: (state, action) =>{\n//         return state.map((post) => post._id === action.payload._id ? action.payload : state);\n//     },\n//     LIKE_POST: (state, action) =>{\n//         console.log(state);\n//         return state.map((post) => post._id === action.payload._id ? action.payload : state);\n//     },\n// })","map":{"version":3,"names":["createReducer","initialState","posts","builder","addCase","state","action","payload","CREATE","UPDATE","filter","post","_id","DELETE","map","LIKE_POST"],"sources":["C:/Users/suraa/Documents/Ninja Notes/Node JS Workspace/MEMORIES-PROJECT/client/src/reducers/posts.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nexport const posts = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase('FETCH_ALL', (state, action) => {\r\n        return action.payload;\r\n    })\r\n    .addCase(CREATE, (state, action) => {\r\n        return [state, action.payload];\r\n    })\r\n    .addCase(UPDATE, (state, action) => {\r\n        return state.filter((post) => post._id !== action.payload);\r\n    })\r\n    .addCase(DELETE, (state, action) => {\r\n        return state.map((post) => post._id === action.payload._id ? action.payload : state);\r\n    })\r\n    .addCase(LIKE_POST, (state, action) => {\r\n        return state.map((post) => post._id === action.payload._id ? action.payload : state);\r\n    })\r\n})\r\n\r\n\r\n// action.payload is used to receive paramiters or value from the user \r\n// export const posts = createReducer([],{\r\n//     FETCH_ALL: (state, action) =>{\r\n//         return action.payload;\r\n//     },\r\n//     CREATE: (state, action) =>{\r\n//         return [state, action.payload];\r\n//     },\r\n//     UPDATE: (state, action) =>{\r\n//         return state.filter((post) => post._id !== action.payload);\r\n//     },\r\n//     DELETE: (state, action) =>{\r\n//         return state.map((post) => post._id === action.payload._id ? action.payload : state);\r\n//     },\r\n//     LIKE_POST: (state, action) =>{\r\n//         console.log(state);\r\n//         return state.map((post) => post._id === action.payload._id ? action.payload : state);\r\n//     },\r\n// })\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,MAAMC,YAAY,GAAG,EAAE;AAEvB,OAAO,MAAMC,KAAK,GAAGF,aAAa,CAACC,YAAY,EAAGE,OAAO,IAAK;EAC5DA,OAAO,CACJC,OAAO,CAAC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACrC,OAAOA,MAAM,CAACC,OAAO;EACzB,CAAC,CAAC,CACDH,OAAO,CAACI,MAAM,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;IAChC,OAAO,CAACD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;EAClC,CAAC,CAAC,CACDH,OAAO,CAACK,MAAM,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;IAChC,OAAOD,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAAC;EAC9D,CAAC,CAAC,CACDH,OAAO,CAACS,MAAM,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;IAChC,OAAOD,KAAK,CAACS,GAAG,CAAEH,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAACK,GAAG,GAAGN,MAAM,CAACC,OAAO,GAAGF,KAAK,CAAC;EACxF,CAAC,CAAC,CACDD,OAAO,CAACW,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;IACnC,OAAOD,KAAK,CAACS,GAAG,CAAEH,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAACK,GAAG,GAAGN,MAAM,CAACC,OAAO,GAAGF,KAAK,CAAC;EACxF,CAAC,CAAC;AACN,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}